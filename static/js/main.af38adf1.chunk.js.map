{"version":3,"sources":["app/axios.instance.js","libs/toastr.js","app/api.js","slices/userSlice.js","components/login.js","libs/context.js","libs/loading.js","slices/selectionSlice.js","pages/shop.selector.js","components/guarded.route.js","components/product.js","components/products.js","components/shop.filters.js","pages/product.page.js","libs/copy.clipboard.js","libs/share.js","libs/confirmation.js","components/list.item.js","components/product.list.js","components/products.list.js","components/product.view.js","components/products.view.js","libs/options.menu.js","pages/lists.js","pages/welcome.js","components/shared.list.js","components/product.carousel.js","pages/product.display.page.js","app/routes.js","components/theme.selector.js","components/sidebar.js","components/header.js","App.js","app/store.js","serviceWorker.js","index.js","assets/cover.svg","assets/logo-dark.svg","assets/logo-light.svg"],"names":["instance","Toastr","props","className","display","Toast","onClose","show","delay","autohide","Header","title","Body","message","explanation","AxiosInstance","axios","create","baseURL","API_URL","defaults","headers","common","token","localStorage","getItem","undefined","interceptors","response","use","error","console","log","Promise","reject","Requests","axiosInstance","LoginRequest","post","data","isValid","get","ShopRequest","getFilters","shopId","params","ProductRequest","getById","id","ListRequest","delete","put","getGuid","linkGuid","guid","fetchLogin","createAsyncThunk","a","authorization","setItem","result","fetchIsValid","successful","userSlice","createSlice","name","initialState","reducers","set","state","action","payload","reset","extraReducers","fulfilled","actions","Login","history","useHistory","dispatch","useDispatch","useState","email","setEmail","password","setPassword","requestLogin","then","go","autoComplete","onSubmit","event","preventDefault","type","placeholder","value","onChange","target","AppContext","createContext","Loading","fetchShop","thunkAPI","responseMessage","messages","join","setPopup","class","fetchShopFilters","setSelectedShop","fetchProduct","fetchProductById","product","shop","fetchList","setViewedProductId","saveList","getState","selection","selectedShopId","list","selectedItems","forEach","val","push","productId","price","products","fetchListById","editList","store","deleteList","getGuidList","clickLinkGuid","selectionSlice","shops","shopFilters","selectedFilters","viewedProductId","lists","displayMode","layoutMode","theme","sidebar","popup","resetSelectedShop","setSelectedItems","index","indexOf","splice","resetSelectedItems","setSelectedFilters","catId","resetSelectedFilters","resetShopFilters","setDisplayMode","setLayoutMode","setTheme","setSidebar","resetPopup","ShopSelector","location","useLocation","useSelector","setShow","selected","status","validation","validate","handleClose","useEffect","pathname","match","find","split","listId","Number","res","Modal","dialogClassName","centered","onHide","backdrop","keyboard","Title","map","item","key","toUpperCase","Footer","onClick","GuardedRoute","Component","component","rest","auth","isAuthenticated","useContext","selectorShopRelatedIssues","createSelector","b","c","shopRelatedIssues","render","progress","Product","activeItems","mode","includes","alt","src","medias","filter","link","findSrcOfType","e","stopPropagation","width","height","viewBox","fill","xmlns","fillRule","d","Products","selectorFilteredProducts","_","Object","entries","every","productShopCategories","shopCategory","category","filteredProducts","filters","Container","Row","Col","xs","md","lg","ShopFilters","findCheckedFilter","filterId","Boolean","handleFilterChange","handleFilterClick","shopCategories","cat","checked","resetFilter","ProductPage","selectorSelectedItemsInfo","totalWeight","reduce","acc","weight","Math","round","selectedItemsInfo","listName","setListName","saveBtnEnable","setSaveBtnEnable","filterDisplay","setFilterDisplay","bottomPanelStatus","setPanelStatus","flag","listSaved","setSaved","toggleBottomPanel","fluid","length","to","cx","cy","r","disabled","CopyClipboard","copy","url","style","fontSize","Share","copied","setCopy","setDisplay","EmailShareButton","subject","body","EmailIcon","size","bgStyle","iconFillColor","WhatsappShareButton","separator","WhatsappIcon","Confirmation","confirm","closeButton","useListItemApi","selectorListItem","primaryFilter","isPrimary","groups","quantity","productContainer","findProduct","pro","findCategory","shopCat","relatedGroupIndex","findIndex","group","ProductForList","selectedProducts","handleSelected","handleItems","listInfo","precedingProducts","foundIndexes","selPro","connect","ProductForView","ProductsForView","OptionsMenu","margin","Lists","useRouteMatch","path","sharingInfo","setSharingInfo","optionDisplay","setOptionDisplay","socialDisplay","setSocialDisplay","tempListId","setTempListId","shareList","window","origin","clearConfirmationDisplay","setClearConfirmationDisplay","deleteConfirmationDisplay","setDeleteConfirmationDisplay","clearList","deleteTheList","exact","optionsAction","ListItem","useParams","confirmationDisplay","setConfirmationDisplay","Table","EditListItem","setSelectedProducts","currentListItems","selectedData","concat","goBack","temp","ViewListItem","removeConfirmationDisplay","setRemoveConfirmationDisplay","deleteProduct","setDeleteProduct","removeItem","currentItems","Welcome","cover","SharedList","ProductCarousel","selectorTtemIsSelected","shopSelector","productsSelector","previousIndex","nextIndex","ifrMedia","media","ifrSrc","URL_3D","primaryField","productLabel","previousProductId","nextProductId","iframe","label","prev","next","itemIsSelected","sizeL","sizeH","sizeW","scrolling","frameBorder","allowFullScreen","href","ProductDisplayPage","selectedProduct","Routes","ThemeSelector","document","documentElement","classList","add","setTimeout","remove","setAttribute","htmlFor","Sidebar","activeClassName","Logo","logoDark","logoLight","UserMenu","App","sidebarDisplay","setAuthenticated","Provider","configureStore","reducer","user","userReducer","selectionReducer","hostname","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.af38adf1.chunk.js","sourcesContent":["import axios from 'axios';\nimport { useDispatch } from 'react-redux'\nimport { API_URL } from './api'\n\nlet instance;\n\n\nfunction AxiosInstance() {\n\n  //const dispatch = useDispatch()\n\n  if(instance) {\n    return instance\n  } else {\n    instance = axios.create({\n      baseURL: API_URL\n    });\n  \n\n    instance.defaults.headers.common['Accept-Language'] = 'en';\n\n    let token = localStorage.getItem('token')\n    if(token !== undefined) {\n      instance.defaults.headers.common['Authorization'] = token\n    }\n  \n    // Response interceptor\n    instance.interceptors.response.use(function (response) {\n  \n      // Do something with response data\n  \n      return response;\n    }, function (error) {\n  \n      // Do something with response error\n      console.log(error.response)\n      console.log(error.message)\n      //let responseMessage = error.response.data?.messages.join(' ')\n      //dispatch(setPopup({ display: true, title: 'Error Fetching Shops', message: error.message, explanation: responseMessage || '', class: 'danger' }))\n  \n      return Promise.reject(error);\n    });\n  \n    return instance\n  }\n\n}\n\nexport default AxiosInstance","import React from 'react';\nimport Toast from 'react-bootstrap/Toast';\n\nexport const Toastr = (props) => {\n\n  return (\n    <div className={`${props.display ? 'overlay' : 'toastr-container'}`}>\n      <Toast onClose={props.onClose} show={props.display} delay={3000} autohide>\n        <Toast.Header>\n          <label className=\"mr-auto\">{props.title}</label>\n        </Toast.Header>\n        <Toast.Body>{props.message} <br /> {props.explanation}</Toast.Body>\n      </Toast>\n    </div>\n\n  )\n}","import AxiosInstance from './axios.instance'\n\nexport const PROTOCOL = 'http://';\nexport const URL = '185.50.68.92';\nexport const PORT = ':8080';\nexport const APP_NAME = '/blockshop2';\nexport const VERSION = 'v1.0.0';\nexport const API_URL = `${PROTOCOL}${URL}${PORT}${APP_NAME}/${VERSION}/`\nexport const URL_3D = 'http://china.block.shop/3d/index.html'\n\n\nexport const Requests = () => {\n\n  const axiosInstance = AxiosInstance()\n\n  return {\n    LoginRequest: {\n      async post(data) {\n        return await axiosInstance.post('users/login', data)\n      },\n      async isValid() {\n        return await axiosInstance.get('users/isvalid')\n      }\n    },\n    ShopRequest: {\n      async get() {\n        return await axiosInstance.get('shops')\n      },\n      async getFilters(shopId) {\n        return await axiosInstance.get('shops/filter', { params: { shopId } })\n      }\n    },\n    ProductRequest: {\n      async get(shopId) {\n        return await axiosInstance.get('products', { params: { shopId } })\n      },\n      async getById(id) {\n        return await axiosInstance.get('products', { params: { id } })\n      }\n    },\n    ListRequest: {\n      async post(data) {\n        return await axiosInstance.post('lists', data)\n      },\n      async get(shopId) {\n        return await axiosInstance.get('lists', { params: { shopId } })\n      },\n      async getById(id) {\n        return await axiosInstance.get('lists/' + id)\n      },\n      async delete(id) {\n        return await axiosInstance.delete('lists/' + id)\n      },\n      async put(id, data) {\n        return await axiosInstance.put('lists/' + id, data)\n      },\n      async getGuid(id) {\n        return await axiosInstance.get('lists/guid/' + id)\n      },\n      async linkGuid(guid) {\n        return await axiosInstance.get('lists/click', { params: { guid } })\n      }\n    }\n  }\n}","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { Requests } from '../app/api';\nimport AxiosInstance from '../app/axios.instance'\n\nexport const fetchLogin = createAsyncThunk(\n  'user/fetchLogin',\n  async (data) => {\n    try {\n      const response = await Requests().LoginRequest.post(data)  \n      let token = response.headers.authorization\n      const axiosInstance = AxiosInstance()\n      axiosInstance.defaults.headers.common['Authorization'] = token\n      localStorage.setItem('token', token)\n      return response.data.result\n    } catch (error) {\n      console.log(error)\n      return false\n    }\n  }\n)\n\nexport const fetchIsValid = createAsyncThunk(\n  'user/fetchIsValid',\n  async () => {\n    try {\n      const response = await Requests().LoginRequest.isValid()\n      return response.data.successful\n    } catch (error) {\n      return false\n    }\n  }\n)\n\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState: {},\n  reducers: {\n    set: (state, action) => action.payload,\n    reset: (state) => {\n      state = {}\n    }\n  },\n  extraReducers: {\n    [fetchLogin.fulfilled]: (state, action) => {\n      // save \n      state = action.payload\n    }\n  }\n});\n\nexport const { set, reset } = userSlice.actions;\n\nexport default userSlice.reducer;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from \"react-router-dom\";\nimport { fetchLogin } from '../slices/userSlice'\n\nfunction Login() {\n  const history = useHistory()\n  const dispatch = useDispatch()\n  const [email, setEmail] = useState('abdullahsunca@hotmail.com')\n  const [password, setPassword] = useState('1')\n\n  const requestLogin = async () => {\n    dispatch(fetchLogin({ email, password })).then(response => {\n      if (response.payload) {\n        history.go()\n      }\n    })\n  }\n\n  return (\n    <>\n      <div className=\"container page-title flex-between\">\n        <label>WELCOME TO BLOCK SHOP</label>\n      </div>\n      <form className=\"login-container flex-container\" autoComplete=\"off\" onSubmit={event => { requestLogin(); event.preventDefault() }}>\n        <input autoComplete=\"off\" type=\"text\" placeholder=\"Please enter your email\" value={email} onChange={event => setEmail(event.target.value)} />\n        <input autoComplete=\"new-password\" type=\"password\" placeholder=\"Please enter password\" value={password} onChange={event => setPassword(event.target.value)} />\n        <button type=\"submit\">LOGIN</button>\n      </form>\n    </>\n  );\n}\n\nexport default Login;","import { useContext, createContext } from \"react\";\n\nexport const AppContext = createContext(null);\n\nexport default function useAppContext() {\n  return useContext(AppContext);\n}","import React from 'react'\n\nfunction Loading() {\n  return (\n    <div className=\"spinner\">\n      <div className=\"bounce1\"></div>\n      <div className=\"bounce2\"></div>\n      <div className=\"bounce3\"></div>\n    </div>\n  )\n}\n\nexport default Loading;","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { Requests } from '../app/api';\n\nexport const fetchShop = createAsyncThunk(\n  'selection/fetchShop',\n  async (thunkAPI) => {\n    try {\n      const response = await Requests().ShopRequest.get()\n      return response.data.result\n    } catch (error) {\n      let responseMessage = error.response.data?.messages.join(' ')\n      thunkAPI.dispatch(setPopup({ display: true, title: 'Error Fetching Shops', message: error.message, explanation: responseMessage || '', class: 'danger' }))\n      return false\n    }\n\n  }\n)\n\nexport const fetchShopFilters = createAsyncThunk(\n  'selection/fetchShopFilters',\n  async (shopId, thunkAPI) => {\n    try {\n      thunkAPI.dispatch(setSelectedShop(shopId))\n      const response = await Requests().ShopRequest.getFilters(shopId)\n      return response.data.result\n    } catch (error) {\n      console.log(error)\n      return false\n    }\n  }\n)\n\nexport const fetchProduct = createAsyncThunk(\n  'selection/fetchProduct',\n  async (shopId, thunkAPI) => {\n    try {\n      thunkAPI.dispatch(setSelectedShop(shopId))\n      const response = await Requests().ProductRequest.get(shopId)\n      return response.data.result\n    } catch (error) {\n      return false\n    }\n\n  }\n)\n\nexport const fetchProductById = createAsyncThunk(\n  'selection/fetchProductById',\n  async (id, thunkAPI) => {\n    try {\n      const response = await Requests().ProductRequest.getById(id)\n      if (response.data.successful) {\n        let product = response.data.result[0]\n        let shopId = product.shop.id\n        if (shopId !== undefined) {\n          thunkAPI.dispatch(fetchShopFilters(shopId))\n          thunkAPI.dispatch(fetchProduct(shopId))\n          thunkAPI.dispatch(fetchList(shopId))\n          thunkAPI.dispatch(setViewedProductId(id))\n        }\n      }\n      return response.data.result\n    } catch (error) {\n      return false\n    }\n  }\n)\n\nexport const saveList = createAsyncThunk(\n  'selection/saveList',\n  async (name, thunkAPI) => {\n    let data = thunkAPI.getState()\n    let shopId = data.selection.selectedShopId\n    let list = []\n    data.selection.selectedItems.forEach(val => {\n      list.push({ productId: val, price: 0 })\n    })\n    try {\n      const response = await Requests().ListRequest.post({ name, products: list, shopId })\n      return response.data.result\n    } catch (error) {\n      let responseMessage = error.response.data?.messages.join(' ')\n      thunkAPI.dispatch(setPopup({ display: true, title: 'List Save Error', message: error.message, explanation: responseMessage || '', class: 'danger' }))\n      return false\n    }\n  }\n)\n\nexport const fetchList = createAsyncThunk(\n  'selection/fetchList',\n  async (shopId) => {\n    try {\n      const response = await Requests().ListRequest.get(shopId)\n      return response.data.result\n    } catch (error) {\n      return false\n    }\n  }\n)\n\nexport const fetchListById = createAsyncThunk(\n  'selection/fetchListById',\n  async (id, thunkAPI) => {\n    try {\n      const response = await Requests().ListRequest.getById(id)\n      if (response.data.successful) {\n        let shopId = response.data.result.shop.id\n        if (shopId !== undefined) {\n          thunkAPI.dispatch(fetchShopFilters(shopId))\n          thunkAPI.dispatch(fetchProduct(shopId))\n          thunkAPI.dispatch(fetchList(shopId))\n        }\n      }\n      return response.data.result\n    } catch (error) {\n      return false\n    }\n  }\n)\n\nexport const editList = createAsyncThunk(\n  'selection/editList',\n  async ({ id, data }, thunkAPI) => {\n    try {\n      const response = await Requests().ListRequest.put(id, data)\n      if (response.data.successful) {\n        thunkAPI.dispatch(setPopup({ display: true, title: 'LIST SAVED', message: 'List updated successfully!', class: 'success' }))\n        let store = thunkAPI.getState()\n        thunkAPI.dispatch(fetchList(store.selection.selectedShopId))\n      }\n      return response.data.result\n    } catch (error) {\n      return false\n    }\n  }\n)\n\nexport const deleteList = createAsyncThunk(\n  'selection/deleteList',\n  async (id, thunkAPI) => {\n    try {\n      const response = await Requests().ListRequest.delete(id)\n      if (response.data.successful) {\n        let store = thunkAPI.getState()\n        thunkAPI.dispatch(fetchList(store.selection.selectedShopId))\n      }\n      return response.data.result\n    } catch (error) {\n      return false\n    }\n  }\n)\n\nexport const getGuidList = createAsyncThunk(\n  'selection/getGuidList',\n  async (id) => {\n    try {\n      const response = await Requests().ListRequest.getGuid(id)\n      return response.data.successful ? response.data.result : false\n    } catch (error) {\n      return false\n    }\n  }\n)\n\nexport const clickLinkGuid = createAsyncThunk(\n  'selection/clickLinkGuid',\n  async (guid, thunkAPI) => {\n    try {\n      const response = await Requests().ListRequest.linkGuid(guid)\n      if(response.data.successful) {\n        let shopId = response.data.result.shop.id\n        thunkAPI.dispatch(fetchShopFilters(shopId))\n        thunkAPI.dispatch(fetchProduct(shopId))\n        thunkAPI.dispatch(fetchList(shopId))\n      }\n      return response.data.successful ? response.data.result : false\n    } catch (error) {\n      return false\n    }\n  }\n)\n\nexport const selectionSlice = createSlice({\n  name: 'selection',\n  initialState: {\n    shops: [],\n    selectedShopId: null,\n    shopFilters: null,\n    selectedFilters: {},\n    products: null,\n    viewedProductId: null,\n    lists: null,\n    selectedItems: [],\n    displayMode: 0, // type = 0 for texture, type=1 for renderer,\n    layoutMode: 'double', // single\n    theme: null,\n    sidebar: false,\n    popup: {\n      display: false,\n      title: '',\n      message: '',\n      explanation: '',\n      class: ''\n    }\n  },\n  reducers: {\n    setSelectedShop: (state, action) => {\n      state.selectedShopId = action.payload\n    },\n    resetSelectedShop: state => {\n      state.selectedShopId = null\n    },\n    setSelectedItems: (state, action) => {\n      let index = state.selectedItems.indexOf(action.payload)\n      if (index > -1) {\n        state.selectedItems.splice(index, 1)\n      } else {\n        state.selectedItems.push(action.payload)\n      }\n    },\n    resetSelectedItems: state => {\n      state.selectedItems = []\n    },\n    setSelectedFilters: (state, action) => {\n      state.selectedFilters[action.payload.catId] = action.payload.value\n    },\n    resetSelectedFilters: (state) => {\n      state.selectedFilters = {}\n    },\n    resetShopFilters: state => {\n      state.shopFilters = []\n    },\n    setDisplayMode: state => {\n      state.displayMode = state.displayMode ? 0 : 1\n    },\n    setLayoutMode: (state, action) => {\n      state.layoutMode = action.payload\n    }, \n    setTheme: (state, action) => {\n      state.theme = action.payload\n    },\n    setViewedProductId: (state, action) => {\n      state.viewedProductId = action.payload\n    },\n    setSidebar: (state, action) => {\n      state.sidebar = action.payload\n    },\n    setPopup: (state, action) => {\n      state.popup = action.payload\n    },\n    resetPopup: state => {\n      state.popup = { display: false, title: '', message: '', explanation: '', class: '' }\n    }\n  },\n  extraReducers: {\n    [fetchShop.fulfilled]: (state, action) => {\n      // save shops \n      state.shops = action.payload || []\n    },\n    [fetchShopFilters.fulfilled]: (state, action) => {\n      // save shop filters \n      state.shopFilters = action.payload || []\n    },\n    [fetchProduct.fulfilled]: (state, action) => {\n      // save products \n      state.products = action.payload || []\n    },\n    [fetchList.fulfilled]: (state, action) => {\n      // save lists \n      state.lists = action.payload || []\n    }\n  }\n});\n\nexport const {\n  setSelectedShop,\n  resetSelectedShop,\n  setSelectedItems,\n  resetSelectedItems,\n  setSelectedFilters,\n  resetSelectedFilters,\n  setDisplayMode,\n  setLayoutMode,\n  setTheme,\n  setViewedProductId,\n  setSidebar,\n  setPopup,\n  resetPopup } = selectionSlice.actions;\n\nexport default selectionSlice.reducer;\n","import React, { useState, useEffect } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  fetchShop,\n  fetchProduct,\n  fetchShopFilters,\n  fetchList,\n  clickLinkGuid,\n  fetchListById,\n  fetchProductById\n} from '../slices/selectionSlice';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport Loading from '../libs/loading';\n\nfunction ShopSelector() {\n\n  const history = useHistory()\n  const dispatch = useDispatch()\n  const location = useLocation()\n  const shops = useSelector(state => state.selection.shops)\n  const [show, setShow] = useState(false);\n  const [validation, validate] = useState({ selected: '', message: 'Please select a shop', status: true })\n\n  const handleClose = () => {\n    if (!validation.selected) {\n      validate(state => ({ ...state, status: false }))\n    } else {\n      validate(state => ({ ...state, status: true }))\n      dispatch(fetchProduct(validation.selected))\n      dispatch(fetchShopFilters(validation.selected))\n      dispatch(fetchList(validation.selected))\n      setShow(false)\n    }\n  }\n  const handleChange = event => {\n    let value = Number(event.target.value);\n    if (value === '') {\n      validate(state => ({ ...state, selected: value }))\n    } else {\n      validate(state => ({ ...state, selected: value, status: true }))\n    }\n\n  }\n\n  useEffect(() => {\n    if (location.pathname.match('/lists/')) {\n      let find = location.pathname.split('/lists/')[1].split('/')[0]\n      let listId = Number(find)\n      dispatch(fetchListById(listId))\n    } else if (location.pathname.match('/list/')) {\n      let guid = location.pathname.split('/list/')[1].split('/')[0]\n      dispatch(clickLinkGuid(guid)).then(res => {\n        if (res.payload) {\n          history.push('/lists/' + res.payload.id)\n        }\n      })\n\n    } else if (location.pathname.match('/product/')) {\n      let find = location.pathname.split('/product/')[1].split('/')[0]\n      let productId = Number(find)\n      dispatch(fetchProductById(productId))\n    } else {\n      setShow(true)\n    }\n    dispatch(fetchShop())\n  }, [])\n\n  return (\n    <>\n      <Modal\n        dialogClassName=\"custom-modal\"\n        centered\n        show={show}\n        onHide={handleClose}\n        backdrop=\"static\"\n        keyboard={false}>\n        <Modal.Header>\n          <Modal.Title>SELECT A SHOP</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <select value={validation.selected} onChange={handleChange}>\n            <option value=\"\">SELECT SHOP</option>\n            {\n              shops?.map((item, index) => (\n                <option key={index} value={item.id}>{item.name.toUpperCase()}</option>\n              ))\n            }\n          </select>\n          {!validation.status ? <label className=\"warning-text\">{validation.message}</label> : ''}\n        </Modal.Body>\n        <Modal.Footer>\n          <button onClick={handleClose}>OKAY</button>\n        </Modal.Footer>\n      </Modal>\n      {show ? null : <Loading />}\n    </>\n  )\n}\n\nexport default ShopSelector;","import React from 'react'\nimport { Route } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport useAppContext from '../libs/context'\nimport Loading from '../libs/loading'\nimport Login from './login'\nimport ShopSelector from '../pages/shop.selector'\nimport { createSelector } from 'reselect'\n\n\nconst GuardedRoute = ({ component: Component, auth, ...rest }) => {\n\n  const { isAuthenticated } = useAppContext();\n\n  const selectorShopRelatedIssues = createSelector(\n    state => state.selection.shops,\n    state => state.selection.products,\n    state => state.selection.selectedShopId,\n    (a, b, c) => a && b && c\n  )\n  const shopRelatedIssues = useSelector(selectorShopRelatedIssues)\n\n  return (\n    <Route {...rest} render={(props) => (\n\n      isAuthenticated.progress ? <Loading /> :\n        isAuthenticated.result ? !shopRelatedIssues ? <ShopSelector /> :\n          <Component {...props} /> :\n          <Login />\n    )} />\n  )\n}\n\nexport default GuardedRoute;","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setSelectedItems } from '../slices/selectionSlice';\nimport { useHistory } from 'react-router-dom';\n\nexport const Product = (props) => {\n\n  const history = useHistory()\n  const activeItems = useSelector(state => state.selection.selectedItems);\n  const getActiveClass = id => activeItems.includes(id) ? 'active' : '';\n\n  const handleDetail = (e) => {\n    e.preventDefault()\n    e.stopPropagation()\n    history.push('/product/' + props.id)\n  }\n\n  const dispatch = useDispatch();\n  const mode = props.mode; // type0 || type1\n  const findSrcOfType = () => {\n    let type = props.medias?.filter(item => item.type === mode)\n    return (type && type[0]?.link) || ''\n  }\n\n \n  return (\n    <div className={\"product \" + getActiveClass(props.id)} onClick={() => dispatch(setSelectedItems(props.id))}>\n      <img alt=\"\" src={findSrcOfType()} onClick={handleDetail} />\n      <label>NO {props.name}</label>\n      <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-plus\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path fillRule=\"evenodd\" d=\"M8 3.5a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-.5.5H4a.5.5 0 0 1 0-1h3.5V4a.5.5 0 0 1 .5-.5z\" />\n        <path fillRule=\"evenodd\" d=\"M7.5 8a.5.5 0 0 1 .5-.5h4a.5.5 0 0 1 0 1H8.5V12a.5.5 0 0 1-1 0V8z\" />\n      </svg>\n      <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-dash\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path fillRule=\"evenodd\" d=\"M3.5 8a.5.5 0 0 1 .5-.5h8a.5.5 0 0 1 0 1H4a.5.5 0 0 1-.5-.5z\" />\n      </svg>\n    </div>\n  )\n\n}","import React from 'react';\nimport { createSelector } from 'reselect';\nimport { useSelector } from 'react-redux';\nimport { Product } from '../components/product';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nexport const Products = (props) => {\n\n  const selectorFilteredProducts = createSelector(\n    state => state.selection.products,\n    (_, selectedFilters) => selectedFilters,\n    (products, selectedFilters) => {\n      return products.filter(product => {\n        return Object.entries(selectedFilters).every(([key, value]) => {\n          return product.productShopCategories?.find(item => {\n            return (item.shopCategory.category.id) === Number(key) && (item.shopCategory.id === Number(value))\n          })\n        })\n      })\n    }\n  )\n  const filteredProducts = useSelector(state => selectorFilteredProducts(state, props.filters))\n  const displayMode = useSelector(state => state.selection.displayMode)\n  const layoutMode = useSelector(state => state.selection.layoutMode)\n\n  return (\n    <Container>\n      {\n        layoutMode === 'single' ?\n          filteredProducts?.map((product) => (\n            <Row key={product.id}>\n              <Col className=\"product-container single mt-3 mb-3\">\n                <Product mode={displayMode} {...product} />\n              </Col>\n            </Row>\n          ))\n          :\n          <Row xs={2} md={4} lg={6}>\n            {\n              filteredProducts?.map((product) => (\n                <Col className=\"product-container mt-3 mb-3\" key={product.id}>\n                  <Product mode={displayMode} {...product} />\n                </Col>\n              ))\n            }\n          </Row>\n      }\n    </Container>\n  )\n\n}","import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\n\n\nexport const ShopFilters = (props) => {\n\n  const selectedFilters = props.selectedFilters\n  const shopFilters = useSelector(state => state.selection.shopFilters)\n\n  const handleFilterClick = () => props.handleFilterClick()\n  const findCheckedFilter = (filterId, catId) => Boolean(selectedFilters[Number(filterId)] && selectedFilters[Number(filterId)] === Number(catId))\n  const handleFilterChange = (e) => props.handleFilterChange(e)\n  const resetFilter = () => props.resetFilter()\n\n  return (\n    <>\n      {\n        <div className=\"bottom-panel filter-selection fade-in\">\n          <div className=\"primary-part\">\n            <label>FILTER</label>\n            <svg onClick={handleFilterClick} width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-x\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path fillRule=\"evenodd\" d=\"M11.854 4.146a.5.5 0 0 1 0 .708l-7 7a.5.5 0 0 1-.708-.708l7-7a.5.5 0 0 1 .708 0z\" />\n              <path fillRule=\"evenodd\" d=\"M4.146 4.146a.5.5 0 0 0 0 .708l7 7a.5.5 0 0 0 .708-.708l-7-7a.5.5 0 0 0-.708 0z\" />\n            </svg>\n          </div>\n          {\n            shopFilters?.map(filter => (\n              <div key={filter.id} className=\"filterAreas\">\n                <label>{filter.name}</label>\n                <ul>\n                  {\n                    filter.shopCategories.map(cat => (\n                      <li key={cat.id} className={findCheckedFilter(filter.id, cat.id) ? 'active' : ''}>\n                        <label>\n                          {cat.value}\n                          <input type=\"radio\" name={filter.name} checked={findCheckedFilter(filter.id, cat.id)} value={Number(cat.id)} onChange={handleFilterChange} />\n                        </label>\n                      </li>\n                    ))\n                  }\n                </ul>\n              </div>\n            ))\n          }\n          <div className=\"secondary-part open\">\n            <div className=\"line\">\n              <button className=\"revert\" onClick={resetFilter}>RESET FILTERS</button>\n            </div>\n          </div>\n        </div>\n      }\n    </>\n\n\n\n\n  )\n\n}","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport { Products } from '../components/products';\nimport { Link } from 'react-router-dom';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { resetSelectedItems, setDisplayMode, saveList, setSelectedFilters, resetSelectedFilters } from '../slices/selectionSlice';\nimport { ShopFilters } from '../components/shop.filters';\nimport { Container } from 'react-bootstrap';\n\n\nexport default function ProductPage() {\n\n\n  const dispatch = useDispatch();\n\n  const selectorSelectedItemsInfo = createSelector(\n    state => state.selection.products,\n    state => state.selection.selectedItems,\n    (products, selectedItems) => {\n      let totalWeight = selectedItems.reduce((acc, val) => acc + products.find(product => product.id === val).weight, 0)\n      return Math.round(totalWeight * 100) / 100\n    }\n  )\n  const selectedItemsInfo = useSelector(selectorSelectedItemsInfo)\n\n  const displayMode = useSelector(state => state.selection.displayMode)\n  const shopFilters = useSelector(state => state.selection.shopFilters)\n  const selectedItems = useSelector(state => state.selection.selectedItems)\n  const selectedFilters = useSelector(state => state.selection.selectedFilters)\n  \n\n  const [listName, setListName] = useState('')\n  const [saveBtnEnable, setSaveBtnEnable] = useState(false)\n  const [filterDisplay, setFilterDisplay] = useState(false)\n  const [bottomPanelStatus, setPanelStatus] = useState(false)\n  const [listSaved, setSaved] = useState({ progress: false, status: false, flag: false })\n\n\n  const bottomPanelHandle = () => {\n    bottomPanelStatus ? toggleBottomPanel() : dispatch(resetSelectedItems())\n  }\n  const clearSelections = () => {\n    dispatch(resetSelectedItems())\n    setListName('')\n    setSaveBtnEnable(false)\n  }\n  const listNameChange = (e) => {\n    let value = e.target.value\n    setListName(value)\n    setSaveBtnEnable(Boolean(value))\n  }\n  const toggleBottomPanel = () => {\n    setPanelStatus(state => !state)\n  }\n  const handleList = () => {\n    setSaved(state => ({ ...state, progress: true }))\n    dispatch(saveList(listName))\n      .then(res => {\n        //successful case \n        if (res.payload) {\n          setSaved(state => ({ status: true, progress: false, flag: true }))\n        } else {\n          setSaved(state => ({ ...state, progress: false }))\n        }\n      })\n  }\n  const newList = () => {\n    setSaved(state => ({ status: false, progress: false, flag: false }))\n    setListName('')\n    setSaveBtnEnable(false)\n  }\n  const handleFilterClick = () => {\n    setFilterDisplay(state => !state)\n  }\n  const handleFilterChange = (e) => {\n    let value = Number(e.target.value)\n    let name = e.target.name\n    dispatch(setSelectedFilters({ catId: shopFilters.find(value => value.name === name).id, value }))\n  }\n  const resetFilter = () => {\n    dispatch(resetSelectedFilters())\n  }\n\n  return (\n    <>\n      <Container fluid className=\"subnav\">\n        <Row>\n          <Col xs={4}>\n            <label onClick={handleFilterClick}>FILTERS</label>\n          </Col>\n          <Col xs={8}>\n            {\n              selectedItems.length ? <label onClick={clearSelections}>CLEAR SELECTION</label> : <label></label>\n            }\n            <label onClick={() => dispatch(setDisplayMode())}>{displayMode ? 'BACK TO BLOCKS' : 'SEE RENDERS'}</label>\n          </Col>\n        </Row>\n      </Container>\n\n      <Products filters={selectedFilters} />\n\n      {\n        selectedItems.length ?\n          <div className=\"bottom-panel product-selection fade-in\">\n            <div className=\"primary-part\">\n              <div className=\"left\">\n                <label>{selectedItems.length} ITEMS SELECTED</label>\n                {bottomPanelStatus ?\n                  <>\n                    <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-dot\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                      <path fillRule=\"evenodd\" d=\"M8 9.5a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3z\" />\n                    </svg>\n                    <label>{selectedItemsInfo} TONS</label>\n                  </>\n                  :\n                  null\n                }\n              </div>\n              <div className=\"right\">\n                <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-plus\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path fillRule=\"evenodd\" d=\"M8 3.5a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-.5.5H4a.5.5 0 0 1 0-1h3.5V4a.5.5 0 0 1 .5-.5z\" />\n                  <path fillRule=\"evenodd\" d=\"M7.5 8a.5.5 0 0 1 .5-.5h4a.5.5 0 0 1 0 1H8.5V12a.5.5 0 0 1-1 0V8z\" />\n                </svg>\n                <label onClick={toggleBottomPanel}>ADD TO LIST</label>\n                <svg onClick={bottomPanelHandle} width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-x\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path fillRule=\"evenodd\" d=\"M11.854 4.146a.5.5 0 0 1 0 .708l-7 7a.5.5 0 0 1-.708-.708l7-7a.5.5 0 0 1 .708 0z\" />\n                  <path fillRule=\"evenodd\" d=\"M4.146 4.146a.5.5 0 0 0 0 .708l7 7a.5.5 0 0 0 .708-.708l-7-7a.5.5 0 0 0-.708 0z\" />\n                </svg>\n              </div>\n            </div>\n            <div className={`secondary-part ${bottomPanelStatus ? 'open' : ''}`}>\n              <div className=\"line\">\n                <input placeholder=\"SET A LIST NAME\" type=\"text\" value={listName} onChange={listNameChange} />\n              </div>\n              {\n                listSaved.flag && listSaved.status ?\n                  <div className=\"line\">\n                    <label className=\"success\">List Saved !</label>\n                    <Link to=\"/lists\">\n                      <button>VIEW LISTS</button>\n                    </Link>\n                    <button onClick={newList}>NEW LIST</button>\n                  </div>\n                  :\n                  <div className=\"line\">\n                    <label><svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-info-circle\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                      <path fillRule=\"evenodd\" d=\"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\" />\n                      <path d=\"M8.93 6.588l-2.29.287-.082.38.45.083c.294.07.352.176.288.469l-.738 3.468c-.194.897.105 1.319.808 1.319.545 0 1.178-.252 1.465-.598l.088-.416c-.2.176-.492.246-.686.246-.275 0-.375-.193-.304-.533L8.93 6.588z\" />\n                      <circle cx=\"8\" cy=\"4.5\" r=\"1\" />\n                    </svg>List not saved yet\n                  </label>\n                    <button disabled={!saveBtnEnable || listSaved.progress} onClick={handleList}>SAVE LIST</button>\n                  </div>\n              }\n            </div>\n          </div> : ''\n      }\n\n      {\n        filterDisplay ?\n          <ShopFilters\n            selectedFilters={selectedFilters}\n            resetFilter={resetFilter}\n            handleFilterChange={handleFilterChange}\n            handleFilterClick={handleFilterClick}\n          />\n          : null\n      }\n\n    </>\n  )\n}","import React from 'react'\nimport copy from 'copy-to-clipboard'\n\nconst CopyClipboard = (props) => {\n\n  const handleCopy = () => {\n    copy(props.url)\n    props.copy()\n  }\n\n  \n  return (\n    <button onClick={handleCopy} className=\"react-share__ShareButton\">\n      <svg style={{fontSize: '2.2em'}} width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-stickies\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path fillRule=\"evenodd\" d=\"M0 1.5A1.5 1.5 0 0 1 1.5 0H13a1 1 0 0 1 1 1H1.5a.5.5 0 0 0-.5.5V14a1 1 0 0 1-1-1V1.5z\" />\n        <path fillRule=\"evenodd\" d=\"M2 3.5A1.5 1.5 0 0 1 3.5 2h11A1.5 1.5 0 0 1 16 3.5v6.086a1.5 1.5 0 0 1-.44 1.06l-4.914 4.915a1.5 1.5 0 0 1-1.06.439H3.5A1.5 1.5 0 0 1 2 14.5v-11zM3.5 3a.5.5 0 0 0-.5.5v11a.5.5 0 0 0 .5.5h6.086a.5.5 0 0 0 .353-.146l4.915-4.915A.5.5 0 0 0 15 9.586V3.5a.5.5 0 0 0-.5-.5h-11z\" />\n        <path fillRule=\"evenodd\" d=\"M10.5 10a.5.5 0 0 0-.5.5v5H9v-5A1.5 1.5 0 0 1 10.5 9h5v1h-5z\" />\n      </svg>\n    </button>\n  )\n}\n\nexport default CopyClipboard\n\n","import React, { useState } from \"react\"\nimport CopyClipboard from '../libs/copy.clipboard'\nimport { EmailShareButton, EmailIcon, WhatsappShareButton, WhatsappIcon } from \"react-share\"\n\nconst Share = (props) => {\n\n  const setDisplay = () => props.setDisplay()\n  const [copied, setCopy] = useState(false)\n\n  return (\n    <div className=\"bottom-panel share-panel fade-in\">\n      <div className=\"primary-part\">\n        <label>SHARE ON SOCIAL MEDIA</label>\n        <svg onClick={setDisplay} width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-x\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path fillRule=\"evenodd\" d=\"M11.854 4.146a.5.5 0 0 1 0 .708l-7 7a.5.5 0 0 1-.708-.708l7-7a.5.5 0 0 1 .708 0z\" />\n          <path fillRule=\"evenodd\" d=\"M4.146 4.146a.5.5 0 0 0 0 .708l7 7a.5.5 0 0 0 .708-.708l-7-7a.5.5 0 0 0-.708 0z\" />\n        </svg>\n      </div>\n\n      <div className=\"secondary-part open\">\n        <div className=\"flex-container\">\n          <CopyClipboard copy={() => setCopy(true)} url={props.url}></CopyClipboard>\n          {copied ? <label className=\"success-text\">Copied !</label> : <label>Copy Link</label>}\n          \n        </div>\n        <div className=\"flex-container\">\n          <EmailShareButton url={props.url} subject={props.subject} body={props.title}>\n            <EmailIcon size={64} round bgStyle={{ fill: 'transparent' }} iconFillColor=\"currentColor\" />\n          </EmailShareButton>\n          <label>Send Via Mail</label>\n        </div>\n        <div className=\"flex-container\">\n          <WhatsappShareButton url={props.url} title={props.title} separator=\" \">\n            <WhatsappIcon size={64} round bgStyle={{ fill: 'transparent' }} iconFillColor=\"currentColor\" />\n          </WhatsappShareButton>\n          <label>WhatsApp</label>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Share","import React from 'react'\nimport Modal from 'react-bootstrap/Modal'\n\nexport const Confirmation = (props) => {\n\n    const handleConfirm = () => props.confirm(true)\n    const handleClose = () => props.confirm(false)\n\n    return (\n        <Modal\n            dialogClassName=\"modal-confirmation\"\n            centered\n            show={props.show}\n            onHide={handleClose}\n            backdrop=\"static\"\n            keyboard={false}>\n            <Modal.Header closeButton>\n                <Modal.Title>{props.title}</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                {props.message}\n            </Modal.Body>\n            <Modal.Footer>\n                <button className=\"revert\" onClick={handleConfirm}>YES</button>\n                <button onClick={handleClose}>NO</button>\n            </Modal.Footer>\n        </Modal>\n    )\n\n}","import { createSelector } from 'reselect';\nimport { useSelector } from 'react-redux';\n\nexport const useListItemApi = (id) => {\n  const selectorListItem = createSelector(\n    state => state.selection.lists,\n    state => state.selection.shopFilters,\n    state => state.selection.products,\n    (lists, filters, products) => {\n      let item = lists.find(item => item.id === Number(id))\n\n      let primaryFilter = filters.find(filter => filter.shopCategories[0].isPrimary)\n\n      // if no primary filter is found \n      // get the first field \n\n      if (!primaryFilter) {\n        primaryFilter = filters.find((filter, index) => index === 0)\n      }\n\n      let groups = primaryFilter?.shopCategories.map(cat => ({ id: cat.id, value: cat.value, quantity: 0, weight: 0 }))\n      item.products.forEach(productContainer => {\n        let findProduct = products.find(pro => pro.id === productContainer.product.id)\n        let findCategory = findProduct.productShopCategories?.find(shopCat => shopCat.shopCategory.category.id === primaryFilter.id)\n        if (findCategory) {\n          // push the product to related group\n          let relatedGroupIndex = groups.findIndex(group => group.id === findCategory.shopCategory.id)\n          groups[relatedGroupIndex].quantity++\n          groups[relatedGroupIndex].weight += findProduct.weight\n        } else {\n          // product is a standalone category itself\n          groups.push({\n            id: findProduct.id, value: findProduct.name, quantity: 1, weight: findProduct.weight\n          })\n        }\n      })\n      let totalWeight = Math.round(100 * item.products.reduce((acc, val) => acc + val.product.weight, 0)) / 100\n      return { item, totalWeight, primaryFilter, groups }\n    }\n  )\n  const listItem = useSelector(selectorListItem)\n  return listItem\n}","import React from 'react'\nimport { useHistory } from 'react-router-dom'\n\nexport const ProductForList = (props) => {\n\n  const history = useHistory()\n\n  const handleDetail = (e) => {\n    e.preventDefault()\n    e.stopPropagation()\n    history.push('/product/' + props.id)\n  }\n  const getActiveClass = id => props.selectedProducts.includes(id) ? 'active' : '';\n  const handleItems = (id) => props.handleSelected(id)\n  const mode = props.mode; // type0 || type1\n  const findSrcOfType = () => {\n    let type = props.medias?.filter(item => item.type === mode)\n    return (type && type[0]?.link) || ''\n  }\n\n  return (\n    <div className={\"product \" + getActiveClass(props.id)} onClick={() => handleItems(props.id)}>\n      <img alt=\"\" src={findSrcOfType()} onClick={handleDetail} />\n      <label>NO {props.name}</label>\n      <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-plus\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path fillRule=\"evenodd\" d=\"M8 3.5a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-.5.5H4a.5.5 0 0 1 0-1h3.5V4a.5.5 0 0 1 .5-.5z\" />\n        <path fillRule=\"evenodd\" d=\"M7.5 8a.5.5 0 0 1 .5-.5h4a.5.5 0 0 1 0 1H8.5V12a.5.5 0 0 1-1 0V8z\" />\n      </svg>\n      <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-dash\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path fillRule=\"evenodd\" d=\"M3.5 8a.5.5 0 0 1 .5-.5h8a.5.5 0 0 1 0 1H4a.5.5 0 0 1-.5-.5z\" />\n      </svg>\n    </div>\n  )\n\n}","import React from 'react'\nimport { createSelector } from 'reselect'\nimport { useSelector, connect } from 'react-redux'\nimport { ProductForList } from './product.list'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\n\n\nconst selectProducts = state => state.selection.products\nconst selectedFilters = (_, selectedFilters) => selectedFilters\nconst listInfo = (_, selectedFilters, listInfo) => listInfo\n\n\nconst selectorFilteredProducts = createSelector(\n  [selectProducts, selectedFilters, listInfo],\n  (products, selectedFilters, listInfo) => {\n\n    let selectedProducts = listInfo.item.products\n    let precedingProducts = []\n    let foundIndexes = []\n    let selectedItems = []\n\n    selectedProducts.forEach(selPro => {\n      selectedItems.push(selPro.product.id)\n      let index = products.findIndex(val => val.id === selPro.product.id)\n      let item = products[index]\n      precedingProducts.push(item)\n      foundIndexes.push(index)\n    })\n\n    let filteredProducts = products.filter((product, key) => {\n      return !(foundIndexes.indexOf(key) > -1) && Object.entries(selectedFilters).every(([key, value]) => {\n        return product.productShopCategories?.find(item => {\n          return (item.shopCategory.category.id) === Number(key) && (item.shopCategory.id === Number(value))\n        })\n      })\n    })\n\n    // this part is for appending the selected items before all the products \n    // no need for now \n    // keep it commented\n    //let filteredOrderedProducts = precedingProducts.concat(filteredProducts)\n\n    return { products: filteredProducts, selectedItems }\n\n  }\n)\n\nconst mapStateToProps = (state, props) => {\n  return selectorFilteredProducts(state, props.filters, props.listInfo)\n}\n\nconst ProductsForList = (props) => {\n\n  const displayMode = useSelector(state => state.selection.displayMode)\n  const layoutMode = useSelector(state => state.selection.layoutMode)\n  const handleSelected = (id) => props.handleSelected(id)\n\n  return (\n    <Container>\n      {\n        layoutMode === 'single' ?\n          props.products?.map((product) => (\n            <Row key={product.id}>\n              <Col className=\"product-container single mt-3 mb-3\">\n                <ProductForList\n                  handleSelected={handleSelected}\n                  selectedProducts={props.selectedProducts}\n                  mode={displayMode}\n                  {...product} />\n              </Col>\n            </Row>\n          ))\n          :\n          <Row xs={2} md={4} lg={6}>\n            {\n              props.products?.map((product) => (\n                <Col className=\"product-container mt-3 mb-3\" key={product.id}>\n                  <ProductForList \n                  handleSelected={handleSelected}\n                  selectedProducts={props.selectedProducts}\n                  mode={displayMode} \n                  {...product} />\n                </Col>\n              ))\n            }\n          </Row>\n      }\n    </Container>\n  )\n\n}\n\nexport default connect(mapStateToProps)(ProductsForList);","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nconst ProductForView = (props) => {\n\n  const history = useHistory()\n  const handleItems = (id) => props.handleSelected(id)\n  const mode = props.mode; // type0 || type1\n  const findSrcOfType = () => {\n    let type = props.medias?.filter(item => item.type === mode)\n    return (type && type[0]?.link) || ''\n  }\n  const handleDetail = (e) => {\n    e.preventDefault()\n    e.stopPropagation()\n    history.push('/product/' + props.id)\n  }\n\n  return (\n    <div className=\"product\">\n      <img alt=\"\" src={findSrcOfType()} onClick={handleDetail} />\n      <label>NO {props.name}</label>\n      <svg onClick={() => handleItems(props.id)} width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-dash\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path fillRule=\"evenodd\" d=\"M3.5 8a.5.5 0 0 1 .5-.5h8a.5.5 0 0 1 0 1H4a.5.5 0 0 1-.5-.5z\" />\n      </svg>\n    </div>\n  )\n\n}\nexport default ProductForView","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport ProductForView from './product.view';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { useEffect } from 'react';\n\nconst ProductsForView = (props) => {\n\n  const displayMode = useSelector(state => state.selection.displayMode)\n  const layoutMode = useSelector(state => state.selection.layoutMode)\n  \n  useEffect(() => console.log(props))\n\n  const handleSelected = (id) => props.handleSelected(id)\n\n  return (\n    <Container>\n      {\n        layoutMode === 'single' ?\n          props.products?.map(item => (\n            <Row key={item.product.id}>\n              <Col className=\"product-container single mt-3 mb-3\">\n                <ProductForView\n                  handleSelected={handleSelected}\n                  mode={displayMode}\n                  {...item.product} />\n              </Col>\n            </Row>\n          ))\n          :\n          <Row xs={2} md={4} lg={6}>\n            {\n              props.products?.map(item => (\n                <Col className=\"product-container mt-3 mb-3\" key={item.product.id}>\n                  <ProductForView \n                  handleSelected={handleSelected}\n                  mode={displayMode} \n                  {...item.product} />\n                </Col>\n              ))\n            }\n          </Row>\n      }\n    </Container>\n  )\n\n}\n\nexport default ProductsForView","import React from \"react\"\n\nexport const OptionsMenu = (props) => {\n  return (\n    <div className=\"options-menu fade-in\">\n      <button style={{margin:'0 5px'}} onClick={() => props.action(\"clear\")}>CLEAR</button>\n      <button style={{margin:'0 5px'}} onClick={() => props.action(\"delete\")}>DELETE</button>\n      <button style={{margin:'0 5px'}} onClick={() => props.action(\"share\")}>SHARE</button>\n    </div>\n  )\n}","import React, { useState, useEffect } from 'react';\nimport Share from '../libs/share';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Loading from '../libs/loading';\nimport Table from 'react-bootstrap/Table';\nimport { Container } from 'react-bootstrap';\nimport { Confirmation } from '../libs/confirmation';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useListItemApi } from '../components/list.item';\nimport ProductsForList from '../components/products.list';\nimport ProductsForView from '../components/products.view';\nimport { ShopFilters } from '../components/shop.filters';\nimport { fetchList, editList, deleteList, getGuidList, setDisplayMode } from '../slices/selectionSlice';\nimport { Switch, Route, Link, useRouteMatch, useParams, useHistory } from \"react-router-dom\";\nimport { OptionsMenu } from '../libs/options.menu';\n\n\nfunction Lists() {\n\n  const history = useHistory()\n  const dispatch = useDispatch()\n  const { path, url } = useRouteMatch()\n  const [sharingInfo, setSharingInfo] = useState({})\n  const [optionDisplay, setOptionDisplay] = useState(null)\n  const [socialDisplay, setSocialDisplay] = useState(false)\n  const lists = useSelector(state => state.selection.lists)\n  const [tempListId, setTempListId] = useState()\n  const selectedShopId = useSelector(state => state.selection.selectedShopId)\n\n  const toggleOptionDisplay = (listId) => {\n    setOptionDisplay(state => state === listId ? null : listId)\n    setSocialDisplay(false)\n  }\n\n  const optionsAction = (value, listId) => {\n    switch (value) {\n      case \"share\":\n        shareList(listId)\n        break\n      case \"delete\":\n        deleteTheList(listId)\n        break\n      case \"clear\":\n        clearList(listId)\n        break\n      default:\n        break\n    }\n  }\n\n  const shareList = (listId) => {\n    dispatch(getGuidList(listId)).then(res => {\n      if (res.payload) {\n        setSharingInfo(state => ({\n          ...state,\n          guid: res.payload,\n          subject: 'Block Shop - Shared List',\n          title: 'Please checkout my list in Block Shop',\n          url: `${window.location.origin}/list/${res.payload}`\n        }))\n        setSocialDisplay(true)\n      }\n    })\n  }\n\n  const [clearConfirmationDisplay, setClearConfirmationDisplay] = useState(false)\n  const [deleteConfirmationDisplay, setDeleteConfirmationDisplay] = useState(false)\n\n  const clearList = (listId) => {\n    setTempListId(listId)\n    setClearConfirmationDisplay(true)\n  }\n\n  const confirmClear = (payload) => {\n    setClearConfirmationDisplay(false)\n    if (payload) {\n      dispatch(editList({ id: tempListId, data: [] })).then(res => {\n        if (res.payload) {\n          // TODO: Toast successful message display \n        }\n      })\n    }\n    setTempListId()\n  }\n\n\n  const deleteTheList = (listId) => {\n    setTempListId(listId)\n    setDeleteConfirmationDisplay(true)\n  }\n\n  const confirmDelete = (payload) => {\n    setDeleteConfirmationDisplay(false)\n    if (payload) {\n      dispatch(deleteList(tempListId)).then(res => {\n        if (res.payload) {\n          // TODO: Toast successful message display \n        }\n      })\n    }\n    setTempListId()\n  }\n\n\n  useEffect(() => {\n    dispatch(fetchList(selectedShopId))\n  }, [])\n\n  return (\n    <Switch>\n      <Route exact path={path}>\n\n        <Container fluid className=\"subnav\">\n          <Row>\n            <Col xs={8}>\n              <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-arrow-left\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path fillRule=\"evenodd\" d=\"M5.854 4.646a.5.5 0 0 1 0 .708L3.207 8l2.647 2.646a.5.5 0 0 1-.708.708l-3-3a.5.5 0 0 1 0-.708l3-3a.5.5 0 0 1 .708 0z\" />\n                <path fillRule=\"evenodd\" d=\"M2.5 8a.5.5 0 0 1 .5-.5h10.5a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5z\" />\n              </svg>\n              <label onClick={() => history.push('/products')}>BACK TO BLOCKS</label>\n            </Col>\n            <Col xs={4}></Col>\n          </Row>\n        </Container>\n\n        <ul className=\"lists-page\">\n          {\n            lists?.map(item => (\n              <li key={item.id}>\n                <Link to={`${url}/${item.id}`}>{item.name}</Link>\n                <svg onClick={() => toggleOptionDisplay(item.id)} width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-three-dots-vertical\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path fillRule=\"evenodd\" d=\"M9.5 13a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z\" />\n                </svg>\n                {optionDisplay === item.id ? <OptionsMenu action={value => optionsAction(value, item.id)} /> : null}\n                {socialDisplay && (optionDisplay === item.id) ?\n                  <Share {...sharingInfo} setDisplay={() => setSocialDisplay(state => !state)} />\n                  : null}\n              </li>\n            ))\n          }\n        </ul>\n        <Confirmation title=\"CLEAR LIST ?\" message=\"Are you sure to clear list?\"\n          show={clearConfirmationDisplay}\n          confirm={confirmClear} />\n        <Confirmation title=\"DELETE LIST ?\" message=\"Are you sure to delete list?\"\n          show={deleteConfirmationDisplay}\n          confirm={confirmDelete} />\n      </Route>\n      <Route exact path={`${path}/:id`}>\n        {lists ? <ListItem /> : <Loading />}\n      </Route>\n      <Route exact path={`${path}/:id/edit`}>\n        {lists ? <EditListItem /> : <Loading />}\n      </Route>\n      <Route exact path={`${path}/:id/view`}>\n        {lists ? <ViewListItem /> : <Loading />}\n      </Route>\n    </Switch>\n  )\n}\n\nexport default Lists;\n\nexport const ListItem = () => {\n\n  const { id } = useParams()\n  const dispatch = useDispatch()\n  const { url } = useRouteMatch()\n  const listInfo = useListItemApi(id)\n  const [sharingInfo, setSharingInfo] = useState({})\n  const [socialDisplay, setSocialDisplay] = useState(false)\n  const [confirmationDisplay, setConfirmationDisplay] = useState(false)\n\n\n  const clearList = () => {\n    setConfirmationDisplay(true)\n  }\n\n  const confirmClear = (payload) => {\n    setConfirmationDisplay(false)\n    if (payload) {\n      dispatch(editList({ id, data: [] })).then(res => {\n        if (res.payload) {\n          // TODO: Toast successful message display \n        }\n      })\n    }\n  }\n\n  const shareList = () => {\n    dispatch(getGuidList(id)).then(res => {\n      if (res.payload) {\n        setSharingInfo(state => ({\n          ...state,\n          guid: res.payload,\n          subject: 'Block Shop - Shared List',\n          title: 'Please checkout my list in Block Shop',\n          url: `${window.location.origin}/list/${res.payload}`\n        }))\n        setSocialDisplay(true)\n      }\n    })\n  }\n\n\n  return (\n    <>\n      <Container fluid className=\"subnav\">\n        <Row>\n          <Col xs={8}>\n            <label>{listInfo.item.name}</label>\n          </Col>\n          <Col xs={4}>\n            <label onClick={clearList}>CLEAR LIST</label>\n          </Col>\n        </Row>\n      </Container>\n\n      <div className=\"list-item-container\">\n        <div className=\"list-item-row\">\n          <div className=\"info-container\">\n            <div className=\"line\">\n              <label>\n                {listInfo.item.products.length} BLOCKS\n              </label>\n              <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-dot\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path fillRule=\"evenodd\" d=\"M8 9.5a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3z\" />\n              </svg>\n              <label>\n                {listInfo.totalWeight} TONS IN TOTAL\n              </label>\n            </div>\n            <div className=\"line\">\n              <label className=\"light-font\">Review and share list with your client.</label>\n            </div>\n          </div>\n          <div className=\"action-container\">\n            <Link to={`${url}/edit`}>ADD BLOCK</Link>\n          </div>\n        </div>\n        <div className=\"list-item-row\">\n          <Table>\n            <thead>\n              <tr>\n                <th>QTY</th>\n                <th>{listInfo.primaryFilter.name}</th>\n                <th>WEIGHT</th>\n              </tr>\n            </thead>\n            <tbody>\n              {\n                listInfo.groups?.map(group => (\n                  group.quantity ?\n                    (<tr key={group.id}>\n                      <td>{group.quantity}</td>\n                      <td>{group.value}</td>\n                      <td>{group.weight}</td>\n                    </tr>) : null\n                ))\n              }\n            </tbody>\n            <tfoot>\n              <tr>\n                <th>TOTAL</th>\n                <th></th>\n                <th>{listInfo.totalWeight} TONS</th>\n              </tr>\n            </tfoot>\n          </Table>\n        </div>\n        <div className=\"list-item-row\">\n          <Container fluid>\n            <Row>\n              <Col xs={7}>\n                <div className=\"action-container revert\">\n                  <Link to={`${url}/view`}>VIEW BLOCKS IN THE LIST</Link>\n                </div>\n              </Col>\n              <Col xs={5}>\n                <button onClick={shareList}>SHARE LIST</button>\n              </Col>\n            </Row>\n          </Container>\n        </div>\n      </div>\n      <Confirmation title=\"CLEAR LIST ?\" message=\"Are you sure to clear list?\"\n        show={confirmationDisplay}\n        confirm={confirmClear} />\n\n      {socialDisplay ?\n        <Share {...sharingInfo} setDisplay={() => setSocialDisplay(state => !state)} />\n        : null}\n    </>\n  )\n}\n\nexport const EditListItem = () => {\n\n  const { id } = useParams()\n  const { url } = useRouteMatch()\n  const dispatch = useDispatch()\n  const history = useHistory()\n  const listInfo = useListItemApi(id)\n  const [selectedFilters, setSelectedFilters] = useState({})\n  const shopFilters = useSelector(state => state.selection.shopFilters)\n  const displayMode = useSelector(state => state.selection.displayMode)\n  const [filterDisplay, setFilterDisplay] = useState(false)\n\n\n  const handleFilterChange = (e) => {\n    let value = Number(e.target.value)\n    let name = e.target.name\n    setSelectedFilters(state => {\n      let key = shopFilters.find(value => value.name === name).id\n      return { ...state, [key]: value }\n    })\n  }\n\n  const handleFilterClick = () => {\n    setFilterDisplay(state => !state)\n  }\n\n  const resetFilter = () => {\n    setSelectedFilters({})\n  }\n\n  const saveList = () => {\n    let currentListItems = listInfo.item.products.map(pro => ({ productId: pro.product.id, price: 0 }))\n    let selectedData = selectedProducts.map(value => ({ productId: value, price: 0 }))\n    let data = currentListItems.concat(selectedData)\n    dispatch(editList({ id, data })).then(res => {\n      if (res.payload) {\n        // TODO: display successful message and go back after a timeout\n        history.goBack()\n      }\n    })\n  }\n\n  const shareList = () => {\n\n  }\n\n\n  const [selectedProducts, setSelectedProducts] = useState([])\n  const handleSelected = (id) => {\n    setSelectedProducts(state => {\n      let index = state.indexOf(id)\n      if (index > -1) {\n        let temp = [...state]\n        temp.splice(index, 1)\n        return temp\n      } else {\n        return [...state, id]\n      }\n    })\n  }\n\n\n\n  return (\n    <>\n\n      <Container fluid className=\"subnav\">\n        <Row>\n          <Col xs={4}>\n            <label onClick={handleFilterClick}>FILTERS</label>\n          </Col>\n          <Col xs={8}>\n            <label onClick={() => dispatch(setDisplayMode())}>{displayMode ? 'BACK TO BLOCKS' : 'SEE RENDERS'}</label>\n          </Col>\n        </Row>\n      </Container>\n\n      <div className=\"container page-title flex-between\">\n        <label>EDITING: {listInfo.item.name}</label>\n        <button className=\"revert\" onClick={saveList}>SAVE LIST</button>\n      </div>\n\n\n      <ProductsForList\n        filters={selectedFilters}\n        listInfo={listInfo}\n        selectedProducts={selectedProducts}\n        handleSelected={handleSelected}\n      />\n      {\n        filterDisplay ?\n          <ShopFilters\n            selectedFilters={selectedFilters}\n            resetFilter={resetFilter}\n            handleFilterChange={handleFilterChange}\n            handleFilterClick={handleFilterClick}\n          />\n          : null\n      }\n    </>\n  )\n\n}\n\nexport const ViewListItem = () => {\n  const { id } = useParams()\n  const dispatch = useDispatch()\n  const listInfo = useListItemApi(id)\n  const [removeConfirmationDisplay, setRemoveConfirmationDisplay] = useState(false)\n  const [clearConfirmationDisplay, setClearConfirmationDisplay] = useState(false)\n  const [deleteProduct, setDeleteProduct] = useState(null)\n\n  const confirmRemove = (payload) => {\n    setRemoveConfirmationDisplay(false)\n    if (payload) {\n      let currentItems = listInfo.item.products.map(pro => ({ productId: pro.product.id, price: 0 }))\n      let index = currentItems.findIndex(item => item.id === deleteProduct)\n      currentItems.splice(index, 1)\n      dispatch(editList({ id, data: currentItems })).then(res => {\n        if (res.payload) {\n          // TODO: Toast successfull message display \n        }\n      })\n    }\n  }\n  const removeItem = (id) => {\n    setDeleteProduct(id)\n    setRemoveConfirmationDisplay(true)\n  }\n\n  const clearList = () => {\n    setClearConfirmationDisplay(true)\n  }\n\n  const confirmClear = (payload) => {\n    setClearConfirmationDisplay(false)\n    if (payload) {\n      dispatch(editList({ id, data: [] })).then(res => {\n        if (res.payload) {\n          // TODO: Toast successful message display \n        }\n      })\n    }\n  }\n\n  return (\n    <>\n      <Container fluid className=\"subnav\">\n        <Row>\n          <Col xs={8}>\n            <label>VIEWING: {listInfo.item.name}</label>\n          </Col>\n          <Col xs={4}>\n            <label onClick={clearList}>CLEAR LIST</label>\n          </Col>\n        </Row>\n      </Container>\n      <ProductsForView products={listInfo.item.products} handleSelected={() => removeItem(id)} />\n      <Confirmation title=\"REMOVE BLOCK ?\" message=\"Are you sure to remove this block?\"\n        show={removeConfirmationDisplay}\n        confirm={confirmRemove} />\n      <Confirmation title=\"CLEAR LIST ?\" message=\"Are you sure to clear list?\"\n        show={clearConfirmationDisplay}\n        confirm={confirmClear} />\n    </>\n  )\n}","import React from 'react'\nimport cover from '../assets/cover.svg'\n\nconst Welcome = () => {\n  return (\n    <>\n      <img className=\"cover-image\" alt=\"cover\" src={cover} />\n      <label className=\"cover-text\">WELCOME TO BLOCK SHOP</label>\n      <label className=\"cover-sub-text\">Please choose products to create your lists, share them with your clients ...</label>\n    </>\n  )\n}\n\nexport default Welcome","import React from 'react'\nimport Loading from '../libs/loading'\n\nconst SharedList = () => {\n  return (\n    <Loading />\n  )\n}\n\nexport default SharedList","import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { URL_3D } from '../app/api'\nimport Share from '../libs/share'\nimport { createSelector } from 'reselect'\nimport CopyClipboard from '../libs/copy.clipboard'\nimport { setSelectedItems } from '../slices/selectionSlice'\nimport { EmailShareButton, EmailIcon, WhatsappShareButton, WhatsappIcon } from \"react-share\"\n\n\nconst ProductCarousel = () => {\n\n  const dispatch = useDispatch()\n  const [sharingInfo, setSharingInfo] = useState({})\n  const [socialDisplay, setSocialDisplay] = useState(false)\n\n  const selectorTtemIsSelected = createSelector(\n    state => state.selection.selectedItems,\n    state => state.selection.viewedProductId,\n    (selectedItems, productId) => selectedItems.includes(productId)\n  )\n  const shopSelector = createSelector(\n    state => state.selection.shops,\n    state => state.selection.selectedShopId,\n    (shops, selectedShopId) => shops.find(shop => shop.id === selectedShopId)\n  )\n  const productsSelector = createSelector(\n    state => state.selection.products,\n    state => state.selection.viewedProductId,\n    (products, viewedProductId) => {\n      let product = products.find(product => product.id === viewedProductId)\n      let ifrMedia = product.medias?.find(media => media.type === 2)\n\n      let ifrSrc = ifrMedia ? URL_3D + '?' + ifrMedia.link : ''\n\n      let primaryField = product.productShopCategories?.find(cat => cat.shopCategory.isPrimary)\n      let productLabel = primaryField?.shopCategory.value\n\n      let index = products.findIndex(product => product.id === viewedProductId)\n      let previousIndex;\n      let nextIndex;\n\n      if (index === 0) {\n        previousIndex = products.length - 1\n        nextIndex = index + 1\n      } else if (index === products.length - 1) {\n        previousIndex = index - 1\n        nextIndex = 0\n      } else {\n        previousIndex = index - 1\n        nextIndex = index + 1\n      }\n\n      let previousProductId = products[previousIndex].id\n      let nextProductId = products[nextIndex].id\n\n      return {\n        product: { ...product, iframe: ifrSrc, label: productLabel },\n        prev: previousProductId,\n        next: nextProductId\n      }\n\n    }\n  )\n\n  const shop = useSelector(shopSelector)\n  const itemIsSelected = useSelector(selectorTtemIsSelected)\n  const { product, prev, next } = useSelector(productsSelector)\n\n  const addToList = () => {\n    dispatch(setSelectedItems(product.id))\n  }\n\n  const shareProduct = () => {\n    setSharingInfo(state => ({\n      ...state,\n      subject: 'Block Shop - Shared Product',\n      title: 'Please checkout this product in Block Shop',\n      url: window.location.href\n    }))\n    setSocialDisplay(true)\n  }\n\n  return (\n    <>\n      <div className=\"subnav container flex-between\">\n        <label>L {product.sizeL} H {product.sizeH} W {product.sizeW}</label>\n        <label>{product.weight} TONS</label>\n      </div>\n\n      <div className=\"product-carousel-container\">\n        <div className=\"product-media-container\">\n          <iframe\n            title=\"Block Shop Product Carousel\"\n            scrolling=\"no\" frameBorder=\"0\" allowFullScreen\n            src={product.iframe} />\n        </div>\n        <div className=\"product-interaction\">\n          <div className=\"navigation-icons\">\n            <Link to={\"/product/\" + prev}>\n              <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-chevron-left\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path fillRule=\"evenodd\" d=\"M11.354 1.646a.5.5 0 0 1 0 .708L5.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0z\" />\n              </svg>\n            </Link>\n          </div>\n          <div className=\"\">NO {product.name} {product.label}</div>\n          <div className=\"navigation-icons\">\n            <Link to={\"/product/\" + next}>\n              <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-chevron-right\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path fillRule=\"evenodd\" d=\"M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z\" />\n              </svg>\n            </Link>\n          </div>\n        </div>\n        <div className=\"product-shortcuts flex-between\">\n          <svg onClick={shareProduct} width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-share\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path fillRule=\"evenodd\" d=\"M11.724 3.947l-7 3.5-.448-.894 7-3.5.448.894zm-.448 9l-7-3.5.448-.894 7 3.5-.448.894z\" />\n            <path fillRule=\"evenodd\" d=\"M13.5 4a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3zm0 1a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5zm0 10a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3zm0 1a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5zm-11-6.5a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3zm0 1a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5z\" />\n          </svg>\n          <button className=\"transparent-button\" onClick={addToList}>\n            {itemIsSelected ? 'REMOVE FROM LIST' : 'ADD TO LIST'}\n          </button>\n        </div>\n      </div>\n\n      {socialDisplay ?\n        <Share {...sharingInfo} setDisplay={() => setSocialDisplay(state => !state)} />\n        : null}\n\n      {/* {socialDisplay ?\n        <div className=\"bottom-panel\">\n          <div className=\"bottom-panel-title\">\n            <label>SHARE PRODUCT</label>\n            <svg onClick={() => setSocialDisplay(state => !state)} width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-x\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path fillRule=\"evenodd\" d=\"M11.854 4.146a.5.5 0 0 1 0 .708l-7 7a.5.5 0 0 1-.708-.708l7-7a.5.5 0 0 1 .708 0z\" />\n              <path fillRule=\"evenodd\" d=\"M4.146 4.146a.5.5 0 0 0 0 .708l7 7a.5.5 0 0 0 .708-.708l-7-7a.5.5 0 0 0-.708 0z\" />\n            </svg>\n          </div>\n\n          <div className=\"bottom-panel-body\">\n\n            <CopyClipboard url={sharingInfo.url}></CopyClipboard>\n\n            <EmailShareButton url={sharingInfo.url} subject={sharingInfo.subject} body={sharingInfo.title}>\n              <EmailIcon size={64} round bgStyle={{ fill: 'transparent' }} iconFillColor=\"gray\" />\n            </EmailShareButton>\n\n            <WhatsappShareButton url={sharingInfo.url} title={sharingInfo.title} separator=\" \">\n              <WhatsappIcon size={64} round bgStyle={{ fill: 'transparent' }} iconFillColor=\"gray\" />\n            </WhatsappShareButton>\n          </div>\n\n\n\n\n        </div> : null} */}\n    </>\n  )\n\n}\n\nexport default ProductCarousel","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport ProductCarousel from '../components/product.carousel'\nimport Loading from '../libs/loading'\nimport { useParams } from 'react-router-dom'\nimport { fetchProductById } from '../slices/selectionSlice';\n\n\nconst ProductDisplayPage = () => {\n\n  const { id } = useParams()\n  const dispatch = useDispatch()\n  const selectedProduct = useSelector(state => state.selection.viewedProductId)\n\n  useEffect(() => {\n    dispatch(fetchProductById(Number(id)))\n  }, [id])\n\n  return (\n    <>\n      {selectedProduct ? <ProductCarousel /> : <Loading />}\n    </>\n\n  )\n\n}\n\nexport default ProductDisplayPage","import React from 'react';\nimport { Switch, Route } from \"react-router-dom\"\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\"\nimport Login from '../components/login'\nimport GuardedRoute from '../components/guarded.route'\nimport ProductPage from '../pages/product.page'\nimport Lists from '../pages/lists'\nimport Welcome from '../pages/welcome'\nimport SharedList from '../components/shared.list'\nimport ProductDisplayPage from '../pages/product.display.page';\nimport ShopSelector from '../pages/shop.selector';\n\nexport default function Routes() {\n  return (\n    <Switch>\n      <GuardedRoute path=\"/products\" component={ProductPage} />\n      <GuardedRoute path=\"/lists\" component={Lists} />\n      <GuardedRoute path=\"/list/:guid\" component={SharedList} />\n      <GuardedRoute path=\"/product/:id\" component={ProductDisplayPage} />\n      <Route path=\"/shops\" component={ShopSelector} />\n      <Route path=\"/login\" component={Login} />\n      <GuardedRoute path=\"/\" component={Welcome} />\n    </Switch>\n  )\n}","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setTheme } from '../slices/selectionSlice'\n\nconst ThemeSelector = () => {\n\n  const dispatch = useDispatch()\n  const theme = useSelector(state => state.selection.theme)\n  \n  const handleModeChange = e => {\n    let value = e.target.checked\n    localStorage.setItem('mode', value)\n    dispatch(setTheme(value))\n    document.documentElement.classList.add('transition')\n    setTimeout(() => {\n      document.documentElement.classList.remove('transition')\n    }, 1000)\n    document.documentElement.setAttribute('data-theme', value ? 'dark' : 'light')\n  }\n\n  return (\n    <div className=\"mode-container\">\n      <div>Light Mode</div>\n      <input className=\"toggle\" checked={Boolean(theme)} type=\"checkbox\" onChange={handleModeChange} id=\"switch\" name=\"mode\" />\n      <label htmlFor=\"switch\"></label>\n      <div>Dark Mode</div>\n    </div>\n  )\n}\n\nexport default ThemeSelector","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport { setSidebar } from '../slices/selectionSlice'\nimport ThemeSelector from './theme.selector'\n\nconst Sidebar = (props) => {\n\n  const dispatch = useDispatch()\n\n  return (\n    <div className=\"sidebar fade-in\">\n      <div className={\"sidebar-inner\"}>\n        <svg onClick={() => dispatch(setSidebar(false))} width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-x\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path fillRule=\"evenodd\" d=\"M11.854 4.146a.5.5 0 0 1 0 .708l-7 7a.5.5 0 0 1-.708-.708l7-7a.5.5 0 0 1 .708 0z\" />\n          <path fillRule=\"evenodd\" d=\"M4.146 4.146a.5.5 0 0 0 0 .708l7 7a.5.5 0 0 0 .708-.708l-7-7a.5.5 0 0 0-.708 0z\" />\n        </svg>\n        <ul>\n          <li>\n            <NavLink exact to=\"/\" activeClassName=\"selected\">HOMEPAGE</NavLink>\n          </li>\n          <li>\n            <NavLink exact to=\"/lists\" activeClassName=\"selected\">MY LISTS</NavLink>\n          </li>\n          <li>\n            <NavLink exact to=\"/products\" activeClassName=\"selected\">PRODUCTS</NavLink>\n          </li>\n          <li>\n            <NavLink exact to=\"/logout\">SIGN OUT</NavLink>\n          </li>\n        </ul>\n        <ThemeSelector />\n      </div>\n    </div>\n  )\n}\n\nexport default Sidebar","import React from 'react'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport { createSelector } from 'reselect'\nimport { useHistory } from 'react-router-dom'\nimport logoDark from '../assets/logo-dark.svg'\nimport logoLight from '../assets/logo-light.svg'\nimport Container from 'react-bootstrap/Container'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setSidebar, setLayoutMode } from '../slices/selectionSlice'\n\nconst Header = () => {\n\n  const shopSelector = createSelector(\n    state => state.selection.shops,\n    state => state.selection.selectedShopId,\n    (shops, selectedShopId) => shops.find(shop => shop.id === selectedShopId)\n  )\n  const dispatch = useDispatch()\n  const shop = useSelector(shopSelector)\n  const theme = useSelector(state => state.selection.theme)\n  const layoutMode = useSelector(state => state.selection.layoutMode)\n\n  return (\n    <header>\n      <Container fluid>\n        <Row>\n          <Col>\n            <Logo theme={theme} />\n          </Col>\n          <Col>\n            <UserMenu theme={theme} />\n          </Col>\n        </Row>\n        <Row className=\"panel-stripe\">\n          <Col>\n            <label className=\"uppercase\">{shop ? 'SHOP : ' + shop.name : ''}</label>\n          </Col>\n          <Col>\n            {\n              layoutMode === 'single' ?\n                <svg onClick={() => dispatch(setLayoutMode('double'))} width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-grid\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path fillRule=\"evenodd\" d=\"M1 2.5A1.5 1.5 0 0 1 2.5 1h3A1.5 1.5 0 0 1 7 2.5v3A1.5 1.5 0 0 1 5.5 7h-3A1.5 1.5 0 0 1 1 5.5v-3zM2.5 2a.5.5 0 0 0-.5.5v3a.5.5 0 0 0 .5.5h3a.5.5 0 0 0 .5-.5v-3a.5.5 0 0 0-.5-.5h-3zm6.5.5A1.5 1.5 0 0 1 10.5 1h3A1.5 1.5 0 0 1 15 2.5v3A1.5 1.5 0 0 1 13.5 7h-3A1.5 1.5 0 0 1 9 5.5v-3zm1.5-.5a.5.5 0 0 0-.5.5v3a.5.5 0 0 0 .5.5h3a.5.5 0 0 0 .5-.5v-3a.5.5 0 0 0-.5-.5h-3zM1 10.5A1.5 1.5 0 0 1 2.5 9h3A1.5 1.5 0 0 1 7 10.5v3A1.5 1.5 0 0 1 5.5 15h-3A1.5 1.5 0 0 1 1 13.5v-3zm1.5-.5a.5.5 0 0 0-.5.5v3a.5.5 0 0 0 .5.5h3a.5.5 0 0 0 .5-.5v-3a.5.5 0 0 0-.5-.5h-3zm6.5.5A1.5 1.5 0 0 1 10.5 9h3a1.5 1.5 0 0 1 1.5 1.5v3a1.5 1.5 0 0 1-1.5 1.5h-3A1.5 1.5 0 0 1 9 13.5v-3zm1.5-.5a.5.5 0 0 0-.5.5v3a.5.5 0 0 0 .5.5h3a.5.5 0 0 0 .5-.5v-3a.5.5 0 0 0-.5-.5h-3z\" />\n                </svg>\n                :\n                <svg onClick={() => dispatch(setLayoutMode('single'))} width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-view-stacked\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path fillRule=\"evenodd\" d=\"M3 0h10a2 2 0 0 1 2 2v3a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2zm0 1a1 1 0 0 0-1 1v3a1 1 0 0 0 1 1h10a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H3zm0 8h10a2 2 0 0 1 2 2v3a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2v-3a2 2 0 0 1 2-2zm0 1a1 1 0 0 0-1 1v3a1 1 0 0 0 1 1h10a1 1 0 0 0 1-1v-3a1 1 0 0 0-1-1H3z\" />\n                </svg>\n            }\n          </Col>\n        </Row>\n      </Container>\n    </header>\n  )\n\n}\n\nconst Logo = (props) => {\n  return (\n    <div className=\"logo\">\n      <img alt=\"logo\" src={props.theme ? logoDark : logoLight} />\n    </div>\n  )\n}\n\nconst UserMenu = () => {\n\n  const history = useHistory()\n  const dispatch = useDispatch()\n  const lists = useSelector(state => state.selection.lists)\n  const sidebarToggle = () => dispatch(setSidebar(true))\n\n  return (\n    <div className=\"user-menu\">\n      <svg onClick={() => history.push('/lists')} width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-file-text\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path fillRule=\"evenodd\" d=\"M4 1h8a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V3a2 2 0 0 1 2-2zm0 1a1 1 0 0 0-1 1v10a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V3a1 1 0 0 0-1-1H4z\" />\n        <path fillRule=\"evenodd\" d=\"M4.5 10.5A.5.5 0 0 1 5 10h3a.5.5 0 0 1 0 1H5a.5.5 0 0 1-.5-.5zm0-2A.5.5 0 0 1 5 8h6a.5.5 0 0 1 0 1H5a.5.5 0 0 1-.5-.5zm0-2A.5.5 0 0 1 5 6h6a.5.5 0 0 1 0 1H5a.5.5 0 0 1-.5-.5zm0-2A.5.5 0 0 1 5 4h6a.5.5 0 0 1 0 1H5a.5.5 0 0 1-.5-.5z\" />\n      </svg>\n      <svg onClick={sidebarToggle} width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-list\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path fillRule=\"evenodd\" d=\"M2.5 11.5A.5.5 0 0 1 3 11h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4A.5.5 0 0 1 3 7h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4A.5.5 0 0 1 3 3h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5z\" />\n      </svg>\n      {lists ? <div className=\"list-item-count\">{lists.length}</div> : null}\n    </div>\n  )\n}\n\n\nexport default Header","import React, { useState, useEffect } from 'react'\nimport { Link } from \"react-router-dom\"\nimport './App.scss'\nimport { Toastr } from './libs/toastr'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { fetchIsValid } from './slices/userSlice'\nimport Routes from './app/routes'\nimport { AppContext } from './libs/context'\nimport { resetPopup, setTheme } from './slices/selectionSlice'\nimport Sidebar from './components/sidebar'\nimport Header from './components/header'\n\nfunction App(props) {\n\n  const dispatch = useDispatch()\n  const popup = useSelector(state => state.selection.popup)\n  const sidebarDisplay = useSelector(state => state.selection.sidebar)\n  const [mode, setMode] = useState(localStorage.getItem('mode') !== \"false\")\n  const [isAuthenticated, setAuthenticated] = useState({ progress: true, result: false })\n\n  const handleToastrClose = () => {\n    dispatch(resetPopup())\n  }\n\n  const handleModeChange = e => {\n    let value = e.target.checked\n    setMode(value)\n    localStorage.setItem('mode', value)\n    dispatch(setTheme(value))\n    document.documentElement.classList.add('transition')\n    setTimeout(() => {\n      document.documentElement.classList.remove('transition')\n    }, 1000)\n    document.documentElement.setAttribute('data-theme', value ? 'dark' : 'light')\n  }\n\n  useEffect(() => {\n\n    let token = localStorage.getItem('token')\n    if (token !== null && token !== undefined) {\n      dispatch(fetchIsValid()).then(response => {\n        if (response.payload) {\n          setAuthenticated({ progress: false, result: true })\n        } else {\n          setAuthenticated({ progress: false, result: false })\n        }\n      })\n    } else {\n      setAuthenticated(state => ({ ...state, progress: false }))\n    }\n\n    document.documentElement.setAttribute('data-theme', mode ? 'dark' : 'light')\n    dispatch(setTheme(mode))\n\n  }, [])\n\n  return (\n    <div className=\"App\">\n      \n      {sidebarDisplay ? <Sidebar/> : null }\n      <Header />\n      <AppContext.Provider value={{ isAuthenticated, setAuthenticated }}>\n        <Routes />\n      </AppContext.Provider>\n      <Toastr onClose={handleToastrClose} {...popup} />\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport userReducer from '../slices/userSlice';\nimport selectionReducer from '../slices/selectionSlice'\n\nexport default configureStore({\n  reducer: {\n    user: userReducer,\n    selection: selectionReducer\n  }\n});","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter><App /></BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/cover.f3eb79b5.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo-dark.6846f089.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo-light.69dfc894.svg\";"],"sourceRoot":""}